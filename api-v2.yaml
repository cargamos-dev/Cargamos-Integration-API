openapi: '3.0.0'
info:
  title: Cargamos API
  description: Tools for applications that leverage Cargamos' logistics capabilities
  version: 2.0.0

servers:
  - url: "https://api.platform.cargamos.com"
    description: Main (production) server
  - url: "https://api.staging.cargamos.com"
    description: Internal staging server for testing

paths:
  /v1/token:
    get:
      tags:
      - token
      summary: "Used for getting the token and key that will validate your
      10 minute session"
      description: "This is the only endpoint that can be accessed through
      basic authentication. Use the user and password provided to you during
      sign up. All other endpoints in this API require a key and a JWT. Call
      `/token` to get your session's JWT and API Key. Sessions last 10 minutes.
      After that time you must call `/token` again to refresh your session with
      new credentials. Failing to do so will result in a 401 response code."
      operationId: getToken
      security:
        - BasicAuth: []
      responses:
        200:
          description: "Successfully authenticated. Your session's credentials
          will be in the body of the response."
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: "Your bearer token. Add bearer authentication
                    using this token to all your calls to this API. Valid for
                    10 minutes."
                  key:
                    type: string
                    description: "Your API Key. Add this value in a query
                    parameter named `key` to all your calls to this API. Valid
                    for 10 minutes"
                example:
                  token: MgjSKPnFzM3hRHaaZoErZ0261KF_example
                  key: 4W3g9MLgVK-RbR-example

  /v2/orders/{domain}:
    post:
      tags:
        - orders
      summary: Used for submitting services you require from us
      description: "Used for submitting services you require from us. These
      include cross-docking, picking, on-demand, or full (picking, packing and
      cross-docking"
      operationId: postOrder
      parameters:
        - name: domain
          in: path
          schema:
            type: string
          required: true
          description: Client's domain name
      requestBody:
        description: "Description of the service we will be providing to
        fulfill your client's orders"
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreate'
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400OrderResonseSchema'
              example:
                errors: [{
                "parameter": "order_type",
                "details": "Invalid order type",
                "code": INVALID_PARAMETER,
                "value": "<wrong value>",
                "message": "Order type: <wrong value> can't be processed. To see valid order types visit: www.api.platform.cargamos/docs/order-types",
                "logs": []
                }]

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: 'Unauthorized'
          content:
            text/html:
              schema:
                type: string
              examples:
                html:
                  summary: 'html response'
                  value: '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>401 Unauthorized</title></head><body text=#000000 bgcolor=#ffffff><h1>Error: Unauthorized</h1><h2>Your client does not have permission to the requested URL<code>/v1/orders/domain.com/3ef3e313-89c4-4f22-a45b-98cfe144b3e7</code>.</h2><h2></h2></body></html>'
        404:
          description: 'Method Not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAPresponse'
      externalDocs:
        url: http://api.todo.com/docs/creating-orders
        description: Learn more about creating orders
    
  /v1/labels:
    get:
      tags:
        - labels
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      
      parameters:
        - in: query
          name: tracking_id
          schema:
            type: array
            items:
              type: string
              example: ["tracking_1", "tracking_2"]
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseLabels"
  
  


components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    ApiKeyAuth:
      type: apiKey
      in: query
      name: key
      description: "API key authentication. API Key is obtained through our
      GET token endpoint. Include it in the `key` query string parameter."
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Bearer authentication. Token is obtained though our GET
      token endpoint"

  schemas:
    CreateOrder:
      type: object
      required:
      - "orders_by_pickup"
      - "timestamp"
      properties:
        debugging_parameters:
          type: object
          description: "Parameters used for debugging purposes."
          required:
            - "verbose"
            - "simulate"
          properties:
            verbose:
              type: string
              enum:
              - "ALL"
              - "NONE"
              - "INFO"
              - "WARNING"
              - "ERROR"
              description: "Specify which verbose mode to use. Verbose mode appends
              helpful log messages to the 'msgs' fields found in our responses."
              default: "NONE"
            simulate:
              type: boolean
              description: "If set to true the order is not inserted into our
              system. This flag is provided for testing of our validation
              layers."
              default: false
          example:
            verbose: NONE
            simulate: false
        orders_by_origin:
          type: array
          items:
            $ref: '#/components/schemas/OrdersByOrigin'
        timestamp:
          type: integer
          format: int64

    OrdersByOrigin:
      type: object

      required:
      - "origin_distribution_center"
      - "orders"
      properties:
        origin_distribution_center:
          type: object
          required:
            - id
            - owner
          properties:
            id:
              type: string
              description: "Unique identifier of the distribution center (store,
              warehouse, darkstore, etc) where your order's contents are to be
              picked up. This identifier must be integrated into our system
              beforehand. See Distribution Centers API for more information.
              If the field `owner` isn't you this id identifies the distribution
              center in which you will drop-off your goods for us to deliver."
            owner:
              type: string
              enum:
                - CARGAMOS
                - SELF
                - ACONB
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        cargo_packaging:
          type: array
          items:
            $ref: '#/components/schemas/CargoPackaging'
        last_mile_routing_parameters:
          type: object
          required:
          - is_route_optimized
          - force_delivery_sequence

          properties:
            is_route_optimized:
              type: boolean
              description: "If true, the orders submitted in this call are
              considered to be routed, and they should be assigned to a
              courier as one route (i.e. group of deliveries). The order in which
              the orders are submitted in this call will be suggested to the
              courier as the order in which they should be delivered. Note: all
              orders must be accepted in order to accept and process this call. A
              proper error code and descrciption will be returned otherwise."
              default: false
            force_delivery_sequence:
              type: boolean
              description: "(Used if is_route_optimized is true) If true, the orders submitted
              in this call are considered to be routed and sorted, and this sorting
              (i.e. the order or the deliveries) will be enforced to the courier
              the courier won't be allowed to modify the order in which the orders
              are delivered." 
              default: false
            last_mile_provider:
              type: string
              description: "The last mile provider you want this order to be delivered by"
              enum:
                - CARGAMOS
                - DEFAULT

    Order:
      type: object
      required:
      - client_order_id
      - order_type
      - delivery_protocols
      - delivery_scheduling_parameters
      - payment_parameters
      - dropoff_location
      - created_at
      - cargo
      properties:
        client_order_id:
          type: string
          description: "Order id to uniquely identify the order sent into our
          system. Must be a uniquely identify an order or parcel within your system.
          This is the only id to refer to orders within our APIs"
        order_type:
          type: string
          enum:
          - "FULFILLMENT"
          - "ON_DEMAND"
          - "FULL"
          - "CROSS_DOCKING" 
        end_client_id:
          type: string
          description: "ID That uniquely identifies an end client. This field
          is optional"
        delivery_protocols:
          type: array
          description: "Esto remplaza a tasks. y a order parameters
          Habra un CRUD para estos protocolos, proporcionando mas
          visibilidad, y control para los clientes."
          items:
            type: string
            enum:
            - STANDARD
            - CONTACTLESS
            - AGE_RESTRICTED
            - DELIVERY_ASSISTANT
            - DISABLE_SMS_NOTIFICATIONS
        delivery_scheduling_parameters:
          type: object
          required:
            - pickup_by_date
            - dropoff_by_date
          properties:
            pickup_by_date:
              type: integer
              description: "Date and time by which the order needs to be picked up."
            dropoff_by_date:
              type: integer
              description: "Date and time by which the order needs to be dropped off."

        payment_parameters:
          $ref: '#/components/schemas/PaymentParameters'
        dropoff_location:
          $ref: '#/components/schemas/Location'
        created_at:
          type: integer
          format: int64
        cargo:
          type: array
          items:
            $ref: '#/components/schemas/Cargo'
    
    Cargo:
      type: object
      example:
        cargo_id: PACKAGE1
        manufacturer_id: 123XYZ
        cargo_type: PACKAGE
        name: Package
        dimensional_weight_parameters: 
          length: 10.0
          width: 5.0
          height: 5.0
          dimensions_unit: CM
          weight: 1.0
          weight_unit: KG

      required:
      - cargo_id
      - cargo_type
      - name
      - dimensional_weight_parameters
      - within_packaging_id
      - price_parameters
      - quantity
      properties:
        cargo_id:
          type: string
        manufacturer_id:
          type: string
        name:
          type: string
        within_packaging_id:
          type: integer
          description: "Used to refer to the package described in
          `CargoPackaging`. Use the value `-1` to indicate this cargo isn't
          contained within any package."
        cargo_type:
          type: string
          enum:
          - UNIT
          - PACKAGE
        description:
          type: string
          description: "Item's description"
          default: ""
        img_urls:
          type: array
          items:
            type: string
          default: []
        dimensional_weight_parameters:
          $ref: '#/components/schemas/DimensionalWeightParameters'
        handling_instructions:
          type: array
          items:
            type: string
            enum:
              - FRAGILE
              - AGE_RESTRICTED
              - USE_NO_HOOKS
          description: "Array of special handling instructions"
          default: []
        quantity:
          type: integer
        price_parameters:
          $ref: '#/components/schemas/PriceParameters'

    DimensionalWeightParameters:
      type: object
      required:
        - length
        - width
        - height
        - dimensions_unit
        - weight
        - weight_unit
      properties:
        length:
          type: number
        width:
          type: number
        height:
          type: number
        dimensions_unit:
          type: string
          enum:
          - M
          - CM
        weight:
          type: number
        weight_unit:
          type: string
          enum:
          - KG
          - G

    CargoPackaging:
      type: object
      description: "This object is used to describe the packaging that holds
      the orders' cargo. Not required if no cargo is contained within another
      package."
      required:
        - id
        - type
        - within
      properties:
        id:
          type: integer
          description: "This package's unique identifier. Multiple items can
          share this id if they are contained in the same package"
        within:
          type: integer
          description: "If this package is within another package. This number
          refers to the containing package's id. Use the value `-1` to indicate
          that this package is NOT contained within another package"
        cargo_packaging_type:
          type: string
          enum:
            - BOX
            - ENVELOPE
            - BAG
            - BUNDLE
        dimensional_weight_parameters:
          $ref: '#/components/schemas/DimensionalWeightParameters'

    Location:
      type: object
      required:
        - address_information
        - personally_identifiable_information
      properties:
        address_information:
          type: object
          required:
            - address_line_1
            - sub_administrative_area
            - administrative_area
            - country
            - postal_code
          properties:
            address_line_1:
              type: string
            address_line_2:
              type: string
            company_name:
              type: string
            locality:
              type: string
            sub_administrative_area:
              type: string
            administrative_area:
              type: string
            country:
              type: string
            postal_code:
              type: string
            notes:
              type: string
        geolocation_information:
          type: object
          required:
            - latitude
            - longitude
          description: "Describes the geolocation information for this location.
          Even though the field is not required, we strongly advice you include
          this information."
          properties:
            latitude:
              type: number
            longitude:
              type: number
            google_place_id:
              type: string
        personally_identifiable_information:
          type: object
          required:
            - contact_first_name
            - contact_last_name
            - contact_phone
            - contact_email_address
          properties:
            contact_first_name:
              type: string
            contact_last_name:
              type: string
            contact_phone:
              type: string
            contact_email_address:
              type: string

    PaymentParameters: # Lo dejo como referencia porque podria ser por item esto (para moverlo facilmente)
      type: object
      required:
        - payment_method
      properties:
        payment_method:
          type: string
          enum:
          - "CASH"
          - "CARD"
          - "PAID"
          - "VOUCHER"
        card_provider:
          type: string
          description: "Required if payment_method is CARD, otherwise this value
          is ignored. Meant for courier to carry an appropriate payment
          terminal"
          enum:
          - "VISA"
          - "MASTERCARD"
          - "AMEX"
          - "CITI"
          - "DISCOVERY"
          - "DINERS"

    PriceParameters:
      type: object
      required:
        - is_high_value
      properties:
        price:
          type: number
          format: float
        currency:
          type: string
          enum:
          - MXN
          - USD
          - COP
        is_high_value:
          type: boolean
        

    ResponseLabels:
      type: object
      properties:
        status:
          type: string
          enum:
          - "SUCCESSFUL"
          - "FAILED"
        logs:
          type: array
          items:
            type: string
        timestamp:
          type: integer
          format: int64
        result:
          type: object
          properties:
            labels:
              type: array
              items:
                type: object
                properties:
                  tracking_id:
                    type: string
                  pdf_url:
                    type: string
                  zpl_url:
                    type: string

    ResponseCreate:
      type: object
      properties:
        status:
          type: string
          enum:
          - "SUCCESSFUL"
          - "FAILED"
        logs:
          type: array
          items:
            type: string
        timestamp:
          type: integer
          format: int64
        result:
          type: array
          items:
            type: object
            properties:
              order_creation_status:
                type: string
                enum:
                - "ACCEPTED"
                - "REJECTED"
              logs:
                type: array
                items:
                  type: string
              client_order_id:
                type: string
              cargamos_order_id:
                type: string
                description: "One to one relationship with `client_order_id`"
              tracking_ids:
                description: "Each tracking id will be related to an id in the
                `packaging_parameters` field. Cargo of type UNIT may share the
                same package id these two or more units will be considered to
                be packaged together meaning they will be sharing the same
                `tracking_id`. Cargo of type PACKAGE must have a unique package
                id per package as described by the `quantity` field. Orders of
                type fulfillment will be assigned 1 tracking id per item."
                type: array
                items:
                  type: object
                  properties:
                    cargo_id:
                      type: string
                    tracking_id:
                      type: string
    Error:
      title: Error
      type: object
      properties:
        status:
          type: string
          example: "ERROR"
        msgs:
          type: array
          items:
            type: string
        timestamp:
          type: integer
          format: int64


    400OrderResonseSchema:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              parameter: 
                type: string
              details: 
                type: string
              code: 
                type: string
              value:
                type: string
              message:
                type: string
              logs:
                type: array
                items:
                  type: string
            


    IAPresponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              "@type":
                type: string
              stackEntries:
                type: array
                items:
                  type: string
              detail:
                type: string
