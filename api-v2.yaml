openapi: '3.0.0'
info:
  title: Cargamos API
  description: "
  ## Introduction 
  
  This API provides tools for developers building applications that leverage
  Cargamos' logistics capabilities. 
  

  ------------------

  ## Authentication

  Use the `username` and `password` provided during the sign up process to call
  `/credentials`. This endpoint returns the *bearer token* and *API key* that will
  authenticate you for the duration of your session.

  ### Important
  
  - Sessions last 10 minutes.

  - Store your session's credentials for the duration of your session to avoid
  repetitive calls.

  - Remember that `/credentials` is the only path protected by basic
  authentication.

  - Use your session's credentials to authenticate with all other endpoints.
  
  
  See `/credentials` for more detailed information.


  ------------------
  
  "
  version: 2.0.0

servers:
  - url: "https://api.platform.cargamos.com"
    description: Production server
  - url: "https://api.staging.cargamos.com"
    description: Internal staging server for testing

paths:
  /v1/credentials:
    get:
      tags:
      - credentials
      summary: Gets the credentials that will validate your 10 minute session
      description: "
      Call `/credentials` to get your new session's token and key. All
      endpoints will respond with a 401 status code to calls with expired or
      invalid credentials."
      operationId: getToken
      security:
        - BasicAuth: []
      responses:
        200:
          description: "
          Successfully authenticated. Get your session's credentials from the
          response:


          | Field Name | Usage |

          | ---------- | ------------ |

          | `token`    | Add bearer authentication using
          this token to all the calls you make to this API. |

          | `key`      | Add this value in a query parameter named
          `key` to all the calls you make to this API. |
          "
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: "Bearer token. 
                    "
                  key:
                    type: string
                    description: "API Key.
                    "
                example:
                  token: MgjSKPnFzM3hRHaaZoErZ0261KF_example
                  key: 4W3g9MLgVK-RbR-example
        401:
          description: "
          Failed to authenticate. Try calling credentials again to refresh your
          session.
          "

  /v1/deliveries:
    post:
      tags:
        - deliveries
      summary: Creates delivery orders
      description: "
      Use this endpoint to submit the delivery services required for your
      application.
      

      There are three types of deliveries that you can create:

      | Type | Description |

      | ---- | ----------- |

      | Cross-docking  | Scheduled end-to-end last mile delivery through our
      POD network. |

      | Storage Supply | Inventory supply deliveries for our fulfillment
      centers. |

      | On-demand | Immediate ship from store last mile delivery. |
      "
      operationId: postDelivery
      requestBody:
        description: "
        
        Through this payload you can specify the requirements for your
        deliveries. It is divided in 3 sections:

         
         | Name |Required |Description |

 |--- | --- | --- | 

 | Deliveries by origin | yes | List of deliveries grouped by `origin_distribution_center`. | 

 | Cargo Packaging | no | List of additional packaging, i.e. packaging that contains other packages or items. | 

 | Last mile routing parameters | no | The integration of routed deliveries is possible through this object.| 
        
        
        -----------------
        "
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeliveries'
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreate'
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400OrderResonseSchema'
              example:
                errors: [{
                "parameter": "delivery_type",
                "details": "Invalid delivery type",
                "code": INVALID_PARAMETER,
                "value": "<wrong value>",
                "message": "delivery_type: <wrong value> can't be processed. To see valid delivery types visit: api.platform.cargamos.com/docs/delivery-types",
                "logs": []
                }]

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: 'Unauthorized'
          content:
            text/html:
              schema:
                type: string
              examples:
                html:
                  summary: 'html response'
                  value: '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>401 Unauthorized</title></head><body text=#000000 bgcolor=#ffffff><h1>Error: Unauthorized</h1><h2>Your client does not have permission to the requested URL<code>/v1/orders/domain.com/3ef3e313-89c4-4f22-a45b-98cfe144b3e7</code>.</h2><h2></h2></body></html>'
        404:
          description: 'Method Not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAPresponse'
    
  /v1/labels:
    get:
      tags:
        - labels
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      
      parameters:
        - in: query
          name: tracking_id
          schema:
            type: array
            items:
              type: string
              example: ["tracking_1", "tracking_2"]
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseLabels"
  
  


components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: "Basic authentication. Username and password are provided
      during the sign up process. `GET /credentials` is the only endpoint that
      uses this authentication scheme."
    ApiKeyAuth:
      type: apiKey
      in: query
      name: key
      description: "API key authentication. Call our `GET /credentials`
      endpoint to generate it. Include it in the `key` query string parameter.
      Valid for 10 minutes."
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Bearer authentication. Call our `GET
      /credentials` endpoint to generate it. Valid for 10 minutes"

  schemas:
    CreateDeliveries:
      type: object
      required:
      - "deliveries_by_origin"
      - "timestamp"
      properties:
        deliveries_by_origin:
          type: array
          items:
            $ref: '#/components/schemas/DeliveriesByOrigin'
        timestamp:
          type: integer
          format: int64

    DeliveriesByOrigin:
      type: object

      required:
      - "origin_distribution_center"
      - "deliveries"
      properties:
        origin_distribution_center:
          type: object
          required:
            - id
            - owner
          properties:
            id:
              type: string
              description: "Unique identifier of the distribution center (store,
              warehouse, darkstore, etc) where your delivery's contents are to
              be picked up. This identifier must be integrated into our system
              beforehand. See Distribution Centers API for more information.
              If the field `owner` isn't you this id identifies the distribution
              center in which you will drop-off your goods for us to deliver."
            owner:
              type: string
              enum:
                - CARGAMOS
                - SELF
                - ACONB
        deliveries:
          type: array
          items:
            $ref: '#/components/schemas/Delivery'
        cargo_packaging:
          type: array
          items:
            $ref: '#/components/schemas/CargoPackaging'
        last_mile_routing_parameters:
          type: object
          required:
          - is_route_optimized
          - force_delivery_sequence

          properties:
            is_route_optimized:
              type: boolean
              description: "If true, the deliveries submitted in this call are
              considered to be routed, and they should be assigned to a
              courier as one route (i.e. group of deliveries). The order in which
              the deliveries are submitted in this call will be suggested to the
              courier as the order in which they should be delivered. Note: all
              deliveries must be accepted in order to accept and process this call. A
              proper error code and descrciption will be returned otherwise."
              default: false
            force_delivery_sequence:
              type: boolean
              description: "(Used if is_route_optimized is true) If true, the order submitted
              in this call are considered to be routed and sorted, and this sorting
              (i.e. the order of the deliveries) will be enforced to the courier
              the courier won't be allowed to modify the order in which the
              deliveries are executed." 
              default: false
            last_mile_provider:
              type: string
              description: "The last mile provider you want this delivery to be handled by"
              enum:
                - CARGAMOS
                - DEFAULT

    Delivery:
      type: object
      required:
      - client_order_id
      - delivery_type
      - delivery_protocols
      - delivery_scheduling_parameters
      - payment_parameters
      - address_information
      - personally_identifiable_information
      - created_at
      - cargo
      properties:
        client_order_id:
          type: string
          description: "Order id to uniquely identify the delivery sent into our
          system. Must be a uniquely identify an order or parcel within your system.
          This is the only id to refer to deliveries within our APIs" 
        order_type:
          type: string
          enum:
          - "ON_DEMAND"
          - "CROSS_DOCKING" 
          - "STORAGE_SUPPLY"
        end_client_id:
          type: string
          description: "ID That uniquely identifies an end client. This field
          is optional"
        delivery_protocols:
          type: array
          description: "Esto remplaza a tasks. y a order parameters
          Habra un CRUD para estos protocolos, proporcionando mas
          visibilidad, y control para los clientes."
          items:
            type: string
            enum:
            - STANDARD
            - CONTACTLESS
            - AGE_RESTRICTED
            - DELIVERY_ASSISTANT
            - DISABLE_SMS_NOTIFICATIONS
        address_information:
          $ref: '#/components/schemas/AddressInformation'
        geolocation_information:
          $ref: '#/components/schemas/GeolocationInformation'
        personally_identifiable_information:
          $ref: '#/components/schemas/PersonallyIdentifiableInformation'
        delivery_scheduling_parameters:
          type: object
          required:
            - pickup_by_date
            - dropoff_by_date
          properties:
            pickup_by_date:
              type: integer
              description: "Date and time by which the order needs to be picked up."
            dropoff_by_date:
              type: integer
              description: "Date and time by which the order needs to be dropped off."

        payment_parameters:
          $ref: '#/components/schemas/PaymentParameters'
        created_at:
          type: integer
          format: int64
        cargo:
          type: array
          items:
            $ref: '#/components/schemas/Cargo'
    
    Cargo:
      type: object
      example:
        cargo_id: PACKAGE1
        manufacturer_id: 123XYZ
        cargo_type: PACKAGE
        name: Package
        dimensional_weight_parameters: 
          length: 10.0
          width: 5.0
          height: 5.0
          dimensions_unit: CM
          weight: 1.0
          weight_unit: KG

      required:
      - cargo_id
      - cargo_type
      - name
      - dimensional_weight_parameters
      - price_parameters
      - quantity
      properties:
        cargo_id:
          type: string
        manufacturer_id:
          type: string
        name:
          type: string
        within_packaging_id:
          type: integer
          description: "Used to refer to the package described in
          `CargoPackaging`. Use the value `-1` to indicate this cargo isn't
          contained within any package."
          default: -1
        cargo_type:
          type: string
          enum:
          - UNIT
          - BOX
          - ENVELOPE
          - BAG
          - BUNDLE
          - PALLET
        description:
          type: string
          description: "Item's description"
          default: ""
        img_urls:
          type: array
          items:
            type: string
          default: []
        dimensional_weight_parameters:
          $ref: '#/components/schemas/DimensionalWeightParameters'
        handling_instructions:
          type: array
          items:
            type: string
            enum:
              - FRAGILE
              - AGE_RESTRICTED
              - USE_NO_HOOKS
          description: "Array of special handling instructions"
          default: []
        quantity:
          type: integer
        price_parameters:
          $ref: '#/components/schemas/PriceParameters'

    DimensionalWeightParameters:
      type: object
      required:
        - length
        - width
        - height
        - dimensions_unit
        - weight
        - weight_unit
      properties:
        length:
          type: number
        width:
          type: number
        height:
          type: number
        dimensions_unit:
          type: string
          enum:
          - M
          - CM
        weight:
          type: number
        weight_unit:
          type: string
          enum:
          - KG
          - G

    CargoPackaging:
      type: object
      description: "This object is used to describe the packaging that holds
      the orders' cargo. Not required if no cargo is contained within another
      package."
      required:
        - id
        - type
        - within
      properties:
        id:
          type: integer
          description: "This package's unique identifier. Multiple items can
          share this id if they are contained in the same package"
        within:
          type: integer
          description: "If this package is within another package. This number
          refers to the containing package's id. Use the value `-1` to indicate
          that this package is NOT contained within another package"
        cargo_packaging_type:
          type: string
          enum:
            - BOX
            - ENVELOPE
            - BAG
            - BUNDLE
            - PALLET
        dimensional_weight_parameters:
          $ref: '#/components/schemas/DimensionalWeightParameters'
    
    AddressInformation:
      type: object
      required:
        - address_line_1
        - sub_administrative_area
        - administrative_area
        - country
        - postal_code
      properties:
        address_line_1:
          type: string
        address_line_2:
          type: string
        company_name:
          type: string
        locality:
          type: string
        sub_administrative_area:
          type: string
        administrative_area:
          type: string
        country:
          type: string
        postal_code:
          type: string
        notes:
          type: string

    GeolocationInformation:
      type: object
      required:
        - latitude
        - longitude
      description: "Describes the geolocation information for this location.
      Even though the field is not required, we strongly advice you include
      this information."
      properties:
        latitude:
          type: number
        longitude:
          type: number
        google_place_id:
          type: string


    PersonallyIdentifiableInformation:
      type: object
      required:
        - contact_first_name
        - contact_last_name
        - contact_phone
        - contact_email_address
      properties:
        contact_first_name:
          type: string
        contact_last_name:
          type: string
        contact_phone:
          type: string
        contact_email_address:
          type: string

    Location:
      type: object
      required:
        - address_information
        - personally_identifiable_information
      properties:
        address_information:
          type: object
          required:
            - address_line_1
            - sub_administrative_area
            - administrative_area
            - country
            - postal_code
          properties:
            address_line_1:
              type: string
            address_line_2:
              type: string
            company_name:
              type: string
            locality:
              type: string
            sub_administrative_area:
              type: string
            administrative_area:
              type: string
            country:
              type: string
            postal_code:
              type: string
            notes:
              type: string

    PaymentParameters: # Lo dejo como referencia porque podria ser por item esto (para moverlo facilmente)
      type: object
      required:
        - payment_method
      properties:
        payment_method:
          type: string
          enum:
          - "CASH"
          - "CARD"
          - "PAID"
          - "VOUCHER"
        card_provider:
          type: string
          description: "Required if payment_method is CARD, otherwise this value
          is ignored. Meant for courier to carry an appropriate payment
          terminal"
          enum:
          - "VISA"
          - "MASTERCARD"
          - "AMEX"
          - "CITI"
          - "DISCOVERY"
          - "DINERS"

    PriceParameters:
      type: object
      required:
        - is_high_value
      properties:
        price:
          type: number
          format: float
        currency:
          type: string
          enum:
          - MXN
          - USD
          - COP
        is_high_value:
          type: boolean
        

    ResponseLabels:
      type: object
      properties:
        status:
          type: string
          enum:
          - "SUCCESSFUL"
          - "FAILED"
        logs:
          type: array
          items:
            type: string
        timestamp:
          type: integer
          format: int64
        result:
          type: object
          properties:
            labels:
              type: array
              items:
                type: object
                properties:
                  tracking_id:
                    type: string
                  pdf_url:
                    type: string
                  zpl_url:
                    type: string

    ResponseCreate:
      type: object
      properties:
        status:
          type: string
          enum:
          - "SUCCESSFUL"
          - "FAILED"
        logs:
          type: array
          items:
            type: string
        timestamp:
          type: integer
          format: int64
        result:
          type: array
          items:
            type: object
            properties:
              order_creation_status:
                type: string
                enum:
                - "ACCEPTED"
                - "REJECTED"
              logs:
                type: array
                items:
                  type: string
              client_order_id:
                type: string
              cargamos_order_id:
                type: string
                description: "One to one relationship with `client_order_id`"
              tracking_ids:
                description: "Each tracking id will be related to an id in the
                `packaging_parameters` field. Cargo of type UNIT may share the
                same package id these two or more units will be considered to
                be packaged together meaning they will be sharing the same
                `tracking_id`. Cargo of type PACKAGE must have a unique package
                id per package as described by the `quantity` field."
                type: array
                items:
                  type: object
                  properties:
                    cargo_id:
                      type: string
                    tracking_id:
                      type: string
    Error:
      title: Error
      type: object
      properties:
        status:
          type: string
          example: "ERROR"
        msgs:
          type: array
          items:
            type: string
        timestamp:
          type: integer
          format: int64


    400OrderResonseSchema:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              parameter: 
                type: string
              details: 
                type: string
              code: 
                type: string
              value:
                type: string
              message:
                type: string
              logs:
                type: array
                items:
                  type: string
            


    IAPresponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              "@type":
                type: string
              stackEntries:
                type: array
                items:
                  type: string
              detail:
                type: string
